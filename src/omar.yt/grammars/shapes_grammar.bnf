:start ::= statements
statements ::= statement+
statement ::= function
| expression
| plane tuple range
| plane tuple range delta

tuple ::= '{' expression_seq '}'
plane ::= ':' variable
delta ::= 'd' '=' number
expression_seq ::= expression* separator => ','

function ::= variable '=' expression
| variable parameters '=' expression

parameters ::= '(' variable_seq ')'

variable_seq ::= word+ separator => ',' proper => 0
variable ::= word
word ~ [a-zA-Z]+

range ::= '{' expression op variable op expression '}'
op ::= '<=' | '<' | '='

expression ::= number
| '(' expression ')'
|| expression '^' expression
|| expression '*' expression
| expression '/' expression
|| expression '+' expression
| expression '-' expression
|| variable '(' expression_seq ')'
|| '|' expression '|'
| variable
| '-' variable

number ~ /-?([\d]+)(\.\d+)?([eE][+-]?\d+)?/

:discard ~ whitespace
whitespace ~ [\s]+

:discard ~ comment
comment ~ /#[^\n]*/
